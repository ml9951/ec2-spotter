#!/bin/bash

# "Phase 1" this is the user-facing script for launching a new spot istance

if [ "$1" = "" ]; then echo "USER ERROR: please specify a configuration file"; exit -1; fi

. $1 || exit -1

ROOT_VOL_NAME=$ec2spotter_volume_name

# Get the user's AWS credentials
if [ -z $AWS_SECRET_ACCESS_KEY ]; then
        eval $(awk -F ' = ' 'NF == 2 {print toupper($1)"="$2 }' < ~/.aws/credentials)
fi

aws ec2 describe-volumes \
	--filters Name=tag-key,Values="Name" Name=tag-value,Values="$ROOT_VOL_NAME" > volumes.tmp || exit -1

ROOT_ZONE=$(jq -r '.Volumes[0].AvailabilityZone' volumes.tmp)
ROOT_VOL=$(jq -r '.Volumes[0].VolumeId' volumes.tmp)
ROOT_TYPE=$(jq -r '.Volumes[0].VolumeType' volumes.tmp)

echo "ROOT_ZONE=${ROOT_ZONE}; ROOT_TYPE=$ROOT_TYPE; ROOT_VOL=$ROOT_VOL";

if [ "$ROOT_VOL_NAME" = "" ]
then
  echo "root volume lacks a Name tag";
  exit -1;
fi

cat >user-data.tmp <<EOF
#!/bin/sh
echo AWSAccessKeyId=$AWS_ACCESS_KEY_ID > /root/.aws.creds
echo AWSSecretKey=$AWS_SECRET_ACCESS_KEY >> /root/.aws.creds

mkdir ~/.aws

echo "[default]" > ~/.aws/credentials
echo aws_access_key_id = $AWS_ACCESS_KEY_ID >> ~/.aws/credentials
echo aws_secret_access_key = $AWS_SECRET_ACCESS_KEY >> ~/.aws/credentials

source /root/.aws.creds

apt-get install -y git

cd /root
git clone https://github.com/ml9951/ec2-spotter.git

cd ec2-spotter/classic
./ec2spotter-setup
./ec2spotter-remount-root --force ${ROOT_VOL_NAME} $ec2spotter_elastic_ip
EOF

userData=$(base64 user-data.tmp | tr -d '\n');

cat >specs.tmp <<EOF
{
  "KeyName" : "AIGH",
  "SecurityGroups" : ["AIGH"],
  "InstanceType": "$ec2spotter_instance_type",
  "ImageId" : "$ec2spotter_preboot_image_id",
  "UserData" : "${userData}",
  "Placement" : {
    "AvailabilityZone": "$ROOT_ZONE"
  },
  "BlockDeviceMappings": [
    {
      "DeviceName" : "/dev/sda1",
      "Ebs": {
        "VolumeSize": 8,
        "DeleteOnTermination": true,
        "VolumeType" : "standard"
      }
    }
  ]
}
EOF

aws ec2 request-spot-instances --spot-price $ec2spotter_bid_price --type persistent --launch-specification file://specs.tmp --region ${LAUNCH_REGION} > spot.tmp

SPOT_ID=$(jq -r '.SpotInstanceRequests[0].SpotInstanceRequestId' spot.tmp)

echo SPOT_ID=$SPOT_ID

# aws ec2 create-tags --resources ${SPOT_ID} --tags Key=Name,Value=${ROOT_VOL_NAME} --region ${LAUNCH_REGION}
